{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './App.css';\nimport { Route, Switch } from 'react-router';\nimport HomeContainer from './HomeComponents/HomeContainer';\nimport ProfileContainer from './ProfileComponents/ProfileContainer';\nimport ShowContainer from './DestinationComponents/ShowContainer';\nimport HeaderContainer from './HeaderContainer.jsx';\nimport Footer from './Footer';\nimport NotFound from './NotFound';\n\nfunction App() {//\n  // state={\n  //   user: {},\n  //   destinations:[],\n  //   search: \"\",\n  //   error: \"\"\n  // }\n  // componentDidMount() {\n  //   fetch(`https://traveladvisor-api.herokuapp.com/destinations`)\n  //   .then(r => r.json())\n  //   .then((destinations) => {\n  //     this.setState({\n  //       destinations\n  //     })\n  //   })\n  //\n  //   if(localStorage.token){\n  //     console.log(localStorage);\n  //     fetch(`https://traveladvisor-api.herokuapp.com/persist`, {\n  //       headers: {\n  //         \"Authorization\": `bearer ${localStorage.token}`\n  //       }\n  //     })\n  //     .then(r => r.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //       if(data.token){\n  //\n  //         this.setState({\n  //             user: data.user\n  //           })\n  //         }\n  //       })\n  //     }\n  // }\n  // createNewUser = (newUser) => {\n  //   this.setState({\n  //     user: newUser.user,\n  //     token: newUser.token\n  //   })\n  // }\n  //\n  // loginUser = (user) => {\n  //   fetch('https://traveladvisor-api.herokuapp.com/login', {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify(user)\n  //   })\n  //   .then(r => r.json())\n  //   .then(userData => {\n  //     if(userData.error){\n  //       this.setState({\n  //         error: userData.error\n  //       })\n  //     }else{\n  //       localStorage.setItem(\"token\", userData.token)\n  //       this.setState({\n  //         user: userData.user,\n  //         search: \"\"\n  //       })\n  //     }\n  //   })\n  //\n  //\n  //\n  //\n  // }\n  //\n  // updateSearchForm = (newValue) => {\n  //   this.setState(prevState => {\n  //     return {\n  //       search: newValue\n  //     }\n  //   })\n  // }\n  //\n  // filterSearch = () => {\n  //   let newArr = this.state.destinations.filter( destination => {\n  //     let searchValue = this.state.search.toLowerCase()\n  //     return destination.name.toLowerCase().includes(searchValue) || destination.trip_type.toLowerCase().includes(searchValue)\n  //   })\n  //   return newArr\n  // }\n  //\n  // clearSearch = (emptyValue) => {\n  //   this.setState({\n  //     search: emptyValue\n  //   })\n  // }\n  //\n  //\n  //    console.log(this.state.user);\n  //   let destinationsId = this.state.destinations.map(destination => destination.id)\n  //\n  //   return (\n  //     <div className=\"page-window\">\n  //         <HeaderContainer error={this.state.error} createNewUser={this.createNewUser} loginUser={this.loginUser} historyProps={this.props} />\n  //         <hr className=\"header-separation\"/>\n  //\n  //       <Switch>\n  //         <Route exact path='/' render={ () => <HomeContainer\n  //         clearSearch={this.clearSearch}\n  //         destinations={this.filterSearch()}\n  //         search={this.state.search}\n  //         updateSearchForm={this.updateSearchForm}\n  //         routerProps={this.props}\n  //         user={this.state.user}\n  //         />} />\n  //         <Route exact path='/profile' render={localStorage.token ? (routerProps) => <ProfileContainer routerProps={routerProps} /> : (routerProps) => <NotFound />}/>\n  //         <Route path='/:id' render={ (routerProps) => <ShowContainer user={this.state.user} routerProps={routerProps} destinationsId={destinationsId} /> }/>\n  //       </Switch>\n  //\n  //       <Footer />\n  //     </div>\n  //   )\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/saimarahman/Desktop/SECoach/New-Travel-App/nextRoute-frontend/src/App.js"],"names":["React","useState","useEffect","withRouter","Route","Switch","HomeContainer","ProfileContainer","ShowContainer","HeaderContainer","Footer","NotFound","App"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,GAAT,GAAgB,CAEdeAAeT,UAAU,CAACS,GAAD,CAAzB","sourcesContent":["import React, {useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport './App.css';\nimport { Route, Switch } from 'react-router'\nimport HomeContainer from './HomeComponents/HomeContainer'\nimport ProfileContainer from './ProfileComponents/ProfileContainer'\nimport ShowContainer from './DestinationComponents/ShowContainer'\nimport HeaderContainer from './HeaderContainer.jsx'\nimport Footer from './Footer'\nimport NotFound from './NotFound';\n\nfunction App () {\n\n  //\n  // state={\n  //   user: {},\n  //   destinations:[],\n  //   search: \"\",\n  //   error: \"\"\n  // }\n\n  // componentDidMount() {\n  //   fetch(`https://traveladvisor-api.herokuapp.com/destinations`)\n  //   .then(r => r.json())\n  //   .then((destinations) => {\n  //     this.setState({\n  //       destinations\n  //     })\n  //   })\n  //\n  //   if(localStorage.token){\n  //     console.log(localStorage);\n  //     fetch(`https://traveladvisor-api.herokuapp.com/persist`, {\n  //       headers: {\n  //         \"Authorization\": `bearer ${localStorage.token}`\n  //       }\n  //     })\n  //     .then(r => r.json())\n  //     .then((data) => {\n  //       console.log(data);\n  //       if(data.token){\n  //\n  //         this.setState({\n  //             user: data.user\n  //           })\n  //         }\n  //       })\n  //     }\n  // }\n\n  // createNewUser = (newUser) => {\n  //   this.setState({\n  //     user: newUser.user,\n  //     token: newUser.token\n  //   })\n  // }\n  //\n  // loginUser = (user) => {\n  //   fetch('https://traveladvisor-api.herokuapp.com/login', {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"content-type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify(user)\n  //   })\n  //   .then(r => r.json())\n  //   .then(userData => {\n  //     if(userData.error){\n  //       this.setState({\n  //         error: userData.error\n  //       })\n  //     }else{\n  //       localStorage.setItem(\"token\", userData.token)\n  //       this.setState({\n  //         user: userData.user,\n  //         search: \"\"\n  //       })\n  //     }\n  //   })\n  //\n  //\n  //\n  //\n  // }\n  //\n  // updateSearchForm = (newValue) => {\n  //   this.setState(prevState => {\n  //     return {\n  //       search: newValue\n  //     }\n  //   })\n  // }\n  //\n  // filterSearch = () => {\n  //   let newArr = this.state.destinations.filter( destination => {\n  //     let searchValue = this.state.search.toLowerCase()\n  //     return destination.name.toLowerCase().includes(searchValue) || destination.trip_type.toLowerCase().includes(searchValue)\n  //   })\n  //   return newArr\n  // }\n  //\n  // clearSearch = (emptyValue) => {\n  //   this.setState({\n  //     search: emptyValue\n  //   })\n  // }\n  //\n  //\n  //    console.log(this.state.user);\n  //   let destinationsId = this.state.destinations.map(destination => destination.id)\n  //\n  //   return (\n  //     <div className=\"page-window\">\n  //         <HeaderContainer error={this.state.error} createNewUser={this.createNewUser} loginUser={this.loginUser} historyProps={this.props} />\n  //         <hr className=\"header-separation\"/>\n  //\n  //       <Switch>\n  //         <Route exact path='/' render={ () => <HomeContainer\n  //         clearSearch={this.clearSearch}\n  //         destinations={this.filterSearch()}\n  //         search={this.state.search}\n  //         updateSearchForm={this.updateSearchForm}\n  //         routerProps={this.props}\n  //         user={this.state.user}\n  //         />} />\n  //         <Route exact path='/profile' render={localStorage.token ? (routerProps) => <ProfileContainer routerProps={routerProps} /> : (routerProps) => <NotFound />}/>\n  //         <Route path='/:id' render={ (routerProps) => <ShowContainer user={this.state.user} routerProps={routerProps} destinationsId={destinationsId} /> }/>\n  //       </Switch>\n  //\n  //       <Footer />\n  //     </div>\n  //   )\n\n}\n\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}