{"ast":null,"code":"var _jsxFileName = \"/Users/saimarahman/Desktop/Development/TravelAdvisor/src/DestinationComponents/ShowContainer.jsx\";\nimport React, { Component } from 'react';\nimport CommentContainer from './CommentContainer';\nimport PhotoContainer from './PhotoContainer';\nimport ThingsToDoContainer from './ThingsToDoContainer';\nimport NotFound from '../NotFound';\nimport { Card, Header } from 'semantic-ui-react';\nimport { Divider, Form, Label } from 'semantic-ui-react';\n\nclass ShowContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false\n    };\n\n    this.createComment = newComment => {\n      debugger;\n      fetch('http://localhost:4000/reviews', {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"accept\": \"application/json\",\n          \"Authorization\": `bearer ${localStorage.token}`\n        },\n        body: JSON.stringify({\n          destination_id: this.state.id,\n          comment: newComment.comment,\n          rating: newComment.rating\n        })\n      }).then(r => r.json()).then(newReview => {\n        let reviewArr = [...this.state.reviews, newReview];\n        this.setState({\n          reviews: reviewArr\n        });\n      });\n    };\n\n    this.deleteReview = review_id => {\n      fetch(`http://localhost:4000/reviews/${review_id}`, {\n        method: \"DELETE\"\n      }).then(r => r.json()).then(deletedReview => {\n        let newReviewArr = this.state.reviews.filter(review => review.id !== deletedReview.review.id);\n        this.setState({ ...this.state,\n          reviews: newReviewArr\n        });\n      });\n    };\n\n    this.addToBucketList = notifyAdd => {\n      fetch('http://localhost:4000/add_joiners', {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"Authorization\": `bearer ${localStorage.token}`\n        },\n        body: JSON.stringify({\n          destination_id: this.state.id\n        })\n      }).then(r => r.json()).then(add_joiner => {\n        let newAddJoiner = [...this.state.add_joiners, add_joiner];\n        this.setState({\n          add_joiners: newAddJoiner,\n          clicked: !this.state.clicked\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    let destination_id = parseInt(this.props.routerProps.match.params.id);\n    fetch(`http://localhost:4000/${destination_id}`).then(r => r.json()).then(destination => {\n      this.setState({ ...destination\n      });\n    });\n  }\n\n  render() {\n    let {\n      things_to_dos\n    } = this.state;\n    let thingsToDo = !things_to_dos ? null : things_to_dos.map(thingstodo => React.createElement(ThingsToDoContainer, {\n      key: thingstodo.id,\n      thingstodo: thingstodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n    let notifyAdd = this.state.clicked ? React.createElement(Label, {\n      pointing: \"right\",\n      className: \"notifyAdd\",\n      size: \"teal\",\n      basic: true,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Added to your bucketlist!\") : null;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.props.destinationsId.includes(parseInt(this.props.routerProps.match.params.id)) ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buckNotify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, notifyAdd, React.createElement(\"div\", {\n      onClick: this.addToBucketList,\n      className: \"add-to-bucketlist\",\n      hidden: localStorage.token ? false : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"+ Add to bucketlist \")), React.createElement(PhotoContainer, {\n      destination: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Header, {\n      className: \"things-to-do-container-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Things to Do\"), React.createElement(Card.Group, {\n      className: \"things-to-do-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, thingsToDo), React.createElement(CommentContainer, {\n      routerProps: this.props.routerProps,\n      deleteReview: this.deleteReview,\n      createComment: this.createComment,\n      destination: this.state,\n      user: this.props.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(NotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ShowContainer;","map":{"version":3,"sources":["/Users/saimarahman/Desktop/Development/TravelAdvisor/src/DestinationComponents/ShowContainer.jsx"],"names":["React","Component","CommentContainer","PhotoContainer","ThingsToDoContainer","NotFound","Card","Header","Divider","Form","Label","ShowContainer","state","clicked","createComment","newComment","fetch","method","headers","localStorage","token","body","JSON","stringify","destination_id","id","comment","rating","then","r","json","newReview","reviewArr","reviews","setState","deleteReview","review_id","deletedReview","newReviewArr","filter","review","addToBucketList","notifyAdd","add_joiner","newAddJoiner","add_joiners","componentDidMount","parseInt","props","routerProps","match","params","destination","render","things_to_dos","thingsToDo","map","thingstodo","destinationsId","includes","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CommentContainer from './CommentContainer'\nimport PhotoContainer from './PhotoContainer'\nimport ThingsToDoContainer from './ThingsToDoContainer'\nimport NotFound from '../NotFound'\nimport { Card, Header } from 'semantic-ui-react'\nimport { Divider, Form, Label } from 'semantic-ui-react'\n\nclass ShowContainer extends Component {\n\n  state = {\n    clicked: false,\n  }\n\n  componentDidMount() {\n    let destination_id = parseInt(this.props.routerProps.match.params.id)\n    fetch(`http://localhost:4000/${destination_id}`)\n    .then(r => r.json())\n    .then(destination => {\n      this.setState({\n        ...destination\n      })\n    })\n  }\n\n  createComment = (newComment) => {\n    debugger\n    fetch('http://localhost:4000/reviews', {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        \"Authorization\": `bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        destination_id: this.state.id,\n        comment: newComment.comment,\n        rating: newComment.rating\n      })\n    })\n    .then(r => r.json())\n    .then((newReview) => {\n      let reviewArr = [...this.state.reviews, newReview]\n      this.setState({\n        reviews: reviewArr\n      })\n    })\n  }\n\n  deleteReview = (review_id) => {\n    fetch(`http://localhost:4000/reviews/${review_id}`, {\n      method: \"DELETE\"\n    })\n    .then(r => r.json())\n    .then(deletedReview => {\n      let newReviewArr = this.state.reviews.filter(review => review.id !== deletedReview.review.id)\n      this.setState({\n        ...this.state,\n        reviews: newReviewArr\n      })\n    })\n  }\n\n  addToBucketList = (notifyAdd) => {\n      fetch('http://localhost:4000/add_joiners', {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"Authorization\": `bearer ${localStorage.token}`\n        },\n        body: JSON.stringify({\n          destination_id: this.state.id\n        })\n      })\n      .then(r => r.json())\n      .then(add_joiner => {\n          let newAddJoiner = [...this.state.add_joiners, add_joiner]\n          this.setState({\n            add_joiners: newAddJoiner,\n            clicked: !this.state.clicked\n        })\n      })\n  }\n\n\n  render() {\n    let { things_to_dos } = this.state\n    let thingsToDo = !things_to_dos ? null : things_to_dos.map(thingstodo => <ThingsToDoContainer key={thingstodo.id} thingstodo={thingstodo}/>)\n    let notifyAdd =  this.state.clicked ? <Label pointing =\"right\" className=\"notifyAdd\" size =\"teal\" basic color='black' >\n          Added to your bucketlist!\n        </Label> : null\n    return (\n      <div>\n        {this.props.destinationsId.includes(parseInt(this.props.routerProps.match.params.id)) ?\n          <div>\n            <div className=\"buckNotify\">\n          {notifyAdd}\n          <div onClick={this.addToBucketList} className=\"add-to-bucketlist\" hidden={localStorage.token ? false : true}>+ Add to bucketlist </div>\n            </div>\n        <PhotoContainer destination={this.state}/>\n            <Header className=\"things-to-do-container-header\">Things to Do</Header>\n            <Card.Group className=\"things-to-do-container\">{thingsToDo}</Card.Group>\n            <CommentContainer routerProps={this.props.routerProps} deleteReview={this.deleteReview} createComment={this.createComment} destination={this.state} user={this.props.user} />\n          </div>\n          :\n          <div>\n            <NotFound />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ShowContainer;\n"]},"metadata":{},"sourceType":"module"}